name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          touch .env
          echo DEBUG=${secrets.DEBUG} > .env
          echo SECRET_KEY=${secrets.SECRET_KEY} > .env
          echo ALLOWED_HOSTS=${secrets.ALLOWED_HOSTS} > .env
          echo CORS_ALLOWED_ORIGINS=${secrets.CORS_ALLOWED_ORIGINS} > .env
          echo SQL_ENGINE=${secrets.SQL_ENGINE} > .env
          echo SQL_DATABASE=${secrets.SQL_DATABASE} > .env
          echo SQL_USER=${secrets.SQL_USER} > .env
          echo SQL_PASSWORD=${secrets.SQL_PASSWORD} > .env
          echo SQL_HOST=${secrets.SQL_HOST} > .env
          echo SQL_PORT=${secrets.SQL_PORT} > .env
          cat .env

      - name: Build Docker image
        run: |
          docker-compose build --force-rm

  test-api:
    runs-on: self-hosted
    needs: [build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Django API Test
        run: |
          docker-compose run api python manage.py test

  test-web:
    runs-on: self-hosted
    needs: [build, test-api]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Django API Test
        run: |
          docker-compose run web yarn test

  deploy:
    runs-on: self-hosted
    needs: [build, test-api, test-web]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Start/Reload pm2
        run: |
          docker-compose up -d

  clean_up:
    runs-on: self-hosted

    steps:
      - name: Cleanup containers
        run: |
          docker image prune -f
