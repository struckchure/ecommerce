name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DEBUG: ${{ secrets.DEBUG }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  SQL_ENGINE: ${{ secrets.SQL_ENGINE }}
  SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
  SQL_USER: ${{ secrets.SQL_USER }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
  SQL_HOST: ${{ secrets.SQL_HOST }}
  SQL_PORT: ${{ secrets.SQL_PORT }}

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          sh create-env-file.sh

      - name: Build Docker image
        run: |
          docker-compose build --force-rm

  test-api:
    runs-on: self-hosted
    needs: [build]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          sh create-env-file.sh

      - name: Django API Test
        run: |
          docker-compose run api python manage.py test

  test-web:
    runs-on: self-hosted
    needs: [test-api]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          sh create-env-file.sh

      - name: React Test
        run: |
          docker-compose run web yarn test

  deploy:
    runs-on: self-hosted
    needs: [test-web]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          sh create-env-file.sh

      - name: Start/Reload pm2
        run: |
          docker-compose up -d

  clean-up:
    runs-on: self-hosted
    needs: [deploy]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create environment files
        run: |
          sh create-env-file.sh

      - name: Cleanup containers
        run: |
          docker image prune -f
